{"version":3,"sources":["webpack:///./src/components/tech-list.js","webpack:///./src/components/links/text-link.js","webpack:///./src/components/_shared/styled-image-container.js","webpack:///./src/components/about.js","webpack:///./src/components/contact.js","webpack:///./src/components/featured-projects.js","webpack:///./src/components/links/button-link.js","webpack:///./src/components/_shared/animation.js","webpack:///./src/components/scroll-indicator.js","webpack:///./src/components/hero.js","webpack:///./src/pages/index.js","webpack:///./src/components/_shared/styled-content-link.js"],"names":["StyledTechContainer","styled","section","StyledTag","span","TechList","techs","map","tech","key","icon","StyledTextLink","Link","flexCenter","TextLink","label","link","Fragment","to","StyledImageContainer","div","StyledStaticImageContainer","StyledAboutContainer","article","mq","gt","sm","StyledTextSection","About","data","frontmatter","title","about_image","html","image","childImageSharp","fluid","id","objectFit","dangerouslySetInnerHTML","__html","StyledContactSection","StyledSection","StyledContainer","StyledFormContainer","StyledForm","StyledSeparator","StyledContacts","xs","Contact","phone","email","address","StyledFeaturedProject","StyledProjectInfoContainer","StyledDescription","contentBox","StyledLinkContainer","flexEnd","StyledArchiveContainer","FeaturedProjects","featuredProjects","featured","project","index","coverImage","cover_image","demoLink","demo_link","repoLink","repo_link","demoLinkLabel","repoLinkLabel","aria-label","href","target","rel","hasHover","prefix","StyledButtonLink","a","ButtonLink","scroll","keyframes","StyledMouse","StyledScroller","StyledScrollText","ScrollIndicator","StyledHeroSection","StyledIntroduction","StyledAuthor","h1","StyledTagline","h2","Hero","introduction","author","tagline","description","ctaLink","ctaLabel","Index","heroData","site","siteMetadata","hero","cta_label","cta_link","menuLinks","indexMenuLinks","about","nodes","contact","StyledContentLink"],"mappings":"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","file":"component---src-pages-index-js-810cdd6b3bddbc21a921.js","sourcesContent":["import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from './icon';\n\nconst StyledTechContainer = styled.section`\n  margin-top: 0.8rem;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst StyledTag = styled.span`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  font-size: 0.8rem;\n\n  color: var(--body-color);\n  margin: 0 1rem 0.5rem 0;\n\n  & > svg {\n    color: var(--primary-color);\n    height: 0.8rem;\n    margin-right: 0.25rem;\n  }\n`;\n\nconst TechList = ({ techs }) => {\n  return (\n    <StyledTechContainer>\n      {techs.map((tech) => (\n        <StyledTag key={tech}>\n          <Icon icon=\"caret-right\" />\n          {tech}\n        </StyledTag>\n      ))}\n    </StyledTechContainer>\n  );\n};\n\nTechList.propTypes = {\n  techs: PropTypes.array.isRequired,\n};\n\nexport default TechList;\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport Icon from '../icon';\nimport { flexCenter } from './../_shared/styled-mixins';\n\nexport const StyledTextLink = styled(Link)`\n  ${flexCenter};\n  text-decoration: none;\n  font-size: 0.8rem;\n  font-weight: 500;\n  white-space: nowrap;\n  padding: 0.4rem 0.8rem;\n  color: var(--primary-color);\n\n  &:hover {\n    color: var(--secondary-color);\n    text-decoration: underline;\n  }\n\n  & > svg {\n    height: 0.8rem;\n    fill: currentColor;\n    margin-left: 0.25rem;\n    transition: margin-left var(--transition-fast) ease;\n  }\n\n  &:hover > svg {\n    margin-left: 0.5rem;\n  }\n`;\n\nconst TextLink = ({ label, link }) => {\n  return (\n    <React.Fragment>\n      {label && link && (\n        <StyledTextLink to={link ? link : '#'}>\n          {label}\n          <Icon icon=\"arrow-right\" />\n        </StyledTextLink>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default TextLink;\n","import styled from '@emotion/styled';\n\nexport const StyledImageContainer = styled.div`\n  min-width: 290px;\n  min-height: 200px;\n  position: relative;\n\n  & .gatsby-image-wrapper * {\n    transition: transform var(--transition-fast) ease-in-out !important;\n  }\n\n  &:hover .gatsby-image-wrapper * {\n    transform: scale(1.1);\n  }\n`;\n\nexport const StyledStaticImageContainer = styled.div`\n  min-width: 290px;\n  min-height: 200px;\n  position: relative;\n\n  .gatsby-image-wrapper {\n    overflow: unset !important;\n  }\n\n  .gatsby-image-wrapper:before {\n    content: '';\n    position: absolute;\n    bottom: -10px;\n    right: -10px;\n    width: 98%;\n    height: 98%;\n    border: 2px solid var(--primary-color);\n    transition: all ease var(--transition-fast);\n  }\n`;\n","import styled from '@emotion/styled';\nimport Img from 'gatsby-image';\nimport React from 'react';\nimport TechList from './tech-list';\nimport { mq } from './_shared/media';\nimport { StyledH1, StyledH2 } from './_shared/styled-headings';\nimport { StyledStaticImageContainer } from './_shared/styled-image-container';\nimport { StyledSection } from './_shared/styled-section';\n\nconst StyledAboutContainer = styled.article`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 2.5rem;\n  padding: 2.5rem 0;\n\n  ${mq.gt.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\nconst StyledTextSection = styled.section`\n  white-space: pre-line;\n`;\n\nconst About = ({ data }) => {\n  const {\n    frontmatter: { title, techs, about_image },\n    html,\n  } = data;\n\n  const image = about_image ? about_image.childImageSharp.fluid : null;\n\n  return (\n    <StyledSection id=\"about\">\n      <StyledH1>About Me</StyledH1>\n      <StyledAboutContainer>\n        {image && (\n          <StyledStaticImageContainer>\n            <Img fluid={image} objectFit=\"contain\" />\n          </StyledStaticImageContainer>\n        )}\n        <div>\n          <StyledH2>{title}</StyledH2>\n          <StyledTextSection dangerouslySetInnerHTML={{ __html: html }} />\n          <TechList techs={techs} />\n        </div>\n      </StyledAboutContainer>\n    </StyledSection>\n  );\n};\n\nAbout.propTypes = {};\n\nexport default About;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport Icon from './icon';\nimport { mq } from './_shared/media';\nimport { StyledH1 } from './_shared/styled-headings';\nimport { StyledSection } from './_shared/styled-section';\n\nconst StyledContactSection = styled(StyledSection)`\n  margin-bottom: 70px;\n`;\nconst StyledContainer = styled.section`\n  display: flex;\n  align-items: center;\n\n  & > svg {\n    font-size: 2rem;\n    margin-right: 0.75rem;\n  }\n`;\nconst StyledFormContainer = styled.section`\n  & > span {\n    font-size: 0.75rem;\n    font-weight: 500;\n  }\n`;\nconst StyledForm = styled.div`\n  color: var(--primary-color);\n\n  font-weight: normal;\n`;\nconst StyledTextSection = styled.section`\n  white-space: pre-line;\n  width: 100%;\n  max-width: 500px;\n  margin-left: 3px;\n`;\nconst StyledSeparator = styled.div`\n  height: 1px;\n  width: 50%;\n  background-color: var(--body-color);\n`;\nconst StyledContacts = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 30px;\n  width: 100%;\n  margin-top: 2rem;\n\n  ${mq.gt.xs} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  ${mq.gt.sm} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst Contact = ({ data }) => {\n  const {\n    frontmatter: { phone, email, address },\n    html,\n  } = data;\n\n  return (\n    <React.Fragment>\n      <StyledContactSection id=\"contact\">\n        <StyledH1>Contact Details</StyledH1>\n        <StyledTextSection dangerouslySetInnerHTML={{ __html: html }} />\n        <StyledSeparator />\n        <StyledContacts>\n          {address && (\n            <StyledContainer>\n              <Icon icon=\"building\" />\n              <StyledFormContainer>\n                <StyledForm>Office Location</StyledForm>\n                <span>{address}</span>\n              </StyledFormContainer>\n            </StyledContainer>\n          )}\n          {email && (\n            <StyledContainer>\n              <Icon icon=\"paper-plane\" />\n              <StyledFormContainer>\n                <StyledForm>My E-Mail</StyledForm>\n                <span>{email}</span>\n              </StyledFormContainer>\n            </StyledContainer>\n          )}\n          {phone && (\n            <StyledContainer>\n              <Icon icon=\"mobile-alt\" />\n              <StyledFormContainer>\n                <StyledForm>Phone Number</StyledForm>\n                <span>{phone}</span>\n              </StyledFormContainer>\n            </StyledContainer>\n          )}\n        </StyledContacts>\n      </StyledContactSection>\n    </React.Fragment>\n  );\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from './icon';\nimport TextLink from './links/text-link';\nimport TechList from './tech-list';\nimport { mq } from './_shared/media';\nimport { StyledContentLink } from './_shared/styled-content-link';\nimport { StyledH1, StyledH2 } from './_shared/styled-headings';\nimport { StyledImageContainer } from './_shared/styled-image-container';\nimport { contentBox, flexCenter, flexEnd } from './_shared/styled-mixins';\nimport { StyledSection } from './_shared/styled-section';\n\nconst StyledFeaturedProject = styled.article`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 2.5rem;\n  padding: 2.5rem 0;\n\n  ${mq.gt.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  &:nth-of-type(even) {\n    direction: rtl;\n  }\n  &:nth-of-type(even) * {\n    direction: ltr;\n  }\n`;\nconst StyledProjectInfoContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nconst StyledDescription = styled.section`\n  ${contentBox}\n  max-height: 180px;\n  position: relative;\n  padding: 10px;\n\n  > p {\n    height: 100%;\n    margin: 0;\n    font-size: 0.8rem;\n    overflow: hidden;\n  }\n`;\nconst StyledLinkContainer = styled.section`\n  ${flexEnd};\n  margin: 10px 0;\n\n  & > a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--body-color);\n\n    &:hover {\n      color: var(--primary-color);\n    }\n  }\n\n  & svg {\n    margin: 0 0.5rem;\n  }\n`;\nconst StyledArchiveContainer = styled.div`\n  ${flexCenter};\n  width: 100%;\n  margin-top: 2.5rem;\n`;\n\nconst FeaturedProjects = ({ featured }) => {\n  const featuredProjects = featured.map((project, index) => {\n    const coverImage = project.frontmatter.cover_image ? project.frontmatter.cover_image.childImageSharp.fluid : null;\n\n    const title = project.frontmatter.title;\n    const demoLink = project.frontmatter.demo_link;\n    const repoLink = project.frontmatter.repo_link;\n    const demoLinkLabel = `featured project ${title} demo`;\n    const repoLinkLabel = `featured project ${title} repo`;\n\n    return (\n      <StyledFeaturedProject key={title + index}>\n        <a\n          aria-label={demoLink ? demoLinkLabel : repoLink ? repoLinkLabel : `featured project ${title}`}\n          href={demoLink ? demoLink : repoLink ? repoLink : '#'}\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          {coverImage && (\n            <StyledImageContainer hasHover>\n              <Img fluid={coverImage} />\n            </StyledImageContainer>\n          )}\n        </a>\n        <StyledProjectInfoContainer>\n          <StyledContentLink href={demoLink ? demoLink : repoLink ? repoLink : '#'} target=\"_blank\" rel=\"noopener\">\n            <StyledH2>{title}</StyledH2>\n          </StyledContentLink>\n          <StyledDescription dangerouslySetInnerHTML={{ __html: project.html }} />\n          <TechList techs={project.frontmatter.techs} />\n          <StyledLinkContainer>\n            {repoLink && (\n              <a href={repoLink} target=\"_blank\" rel=\"noopener\" title=\"Repository Link\" aria-label={repoLinkLabel}>\n                <Icon icon=\"github\" prefix=\"fab\" />\n              </a>\n            )}\n            {demoLink && (\n              <a href={demoLink} target=\"_blank\" rel=\"noopener\" title=\"Demo Link\" aria-label={demoLinkLabel}>\n                <Icon icon=\"external-link-alt\" />\n              </a>\n            )}\n          </StyledLinkContainer>\n        </StyledProjectInfoContainer>\n      </StyledFeaturedProject>\n    );\n  });\n\n  return (\n    <StyledSection id=\"projects\">\n      <StyledH1>Featured Projects</StyledH1>\n      {featuredProjects}\n      <StyledArchiveContainer>\n        <TextLink label=\"View More Projects\" link=\"/projects\" />\n      </StyledArchiveContainer>\n    </StyledSection>\n  );\n};\n\nFeaturedProjects.propTypes = {\n  featured: PropTypes.array.isRequired,\n};\n\nexport default FeaturedProjects;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport Icon from '../icon';\nimport { flexCenter } from './../_shared/styled-mixins';\n\nexport const StyledButtonLink = styled.a`\n  ${flexCenter};\n  text-decoration: none;\n  color: var(--bg-content-color) !important;\n  background-color: var(--title-color);\n  font-size: 0.9rem;\n  font-weight: 500;\n  white-space: nowrap;\n  position: relative;\n  border: none;\n  padding: 0.4rem 0.8rem;\n\n  &:hover {\n    color: var(--primary-color) !important;\n  }\n\n  &:after {\n    content: '';\n    z-index: -1;\n    border: 1px solid var(--title-color);\n    position: absolute;\n    bottom: -3px;\n    right: -3px;\n    width: 100%;\n    height: 100%;\n    transition: all ease var(--transition-fast);\n  }\n\n  &:hover:after {\n    border: 1px solid var(--primary-color);\n    bottom: -5px;\n    right: -5px;\n  }\n\n  & > svg {\n    fill: var(--bg-content-color);\n    height: 0.8rem;\n    margin-left: 0.25rem;\n  }\n\n  &:hover > svg {\n    fill: var(--primary-color);\n  }\n`;\n\nconst ButtonLink = ({ label, link }) => {\n  return (\n    <React.Fragment>\n      {label && link && (\n        <StyledButtonLink href={link ? link : '#'} target=\"_blank\" rel=\"noopener\">\n          {label}\n          <Icon icon=\"arrow-right\" />\n        </StyledButtonLink>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ButtonLink;\n","import { keyframes } from '@emotion/core'\n\nexport const scroll = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  10% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n\n  100% {\n    transform: translateY(10px);\n    opacity: 0;\n  }\n`;","import styled from '@emotion/styled';\nimport React from 'react';\nimport { scroll } from './_shared/animation';\nimport { mq } from './_shared/media';\nimport { flexCenter } from './_shared/styled-mixins';\n\nconst StyledContainer = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 0;\n  right: 0;\n  width: 100%;\n  ${flexCenter};\n  flex-direction: column;\n\n  display: none;\n\n  ${mq.gt.xs} {\n    display: flex;\n  }\n`;\nconst StyledMouse = styled.div`\n  width: 20px;\n  height: 30px;\n  padding: 0 6px;\n  border: 2px solid #fff;\n  border-radius: 20px;\n`;\nconst StyledScroller = styled.div`\n  position: relative;\n  left: 50%;\n  top: 6px;\n  margin-left: -1px;\n  width: 2px;\n  height: 6px;\n  background: var(--primary-color);\n  border-radius: 25%;\n  animation-name: ${scroll};\n  animation-duration: 2.2s;\n  animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);\n  animation-iteration-count: infinite;\n`;\nconst StyledScrollText = styled.span`\n  font-size: 0.7rem;\n  margin: 20px 0;\n`;\n\nconst ScrollIndicator = () => {\n  return (\n    <StyledContainer>\n      <StyledScrollText>Scroll down</StyledScrollText>\n      <StyledMouse>\n        <StyledScroller />\n      </StyledMouse>\n    </StyledContainer>\n  );\n};\n\nScrollIndicator.propTypes = {};\n\nexport default ScrollIndicator;\n","import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ButtonLink from './links/button-link';\nimport ScrollIndicator from './scroll-indicator';\nimport { mq } from './_shared/media';\nimport { StyledSection } from './_shared/styled-section';\n\nconst StyledHeroSection = styled(StyledSection)`\n  min-height: calc(100vh - 2 * var(--header-height));\n  position: relative;\n\n  ${mq.gt.sm} {\n    min-height: calc(100vh - var(--header-height));\n  }\n`;\nconst StyledIntroduction = styled.div`\n  color: var(--primary-color);\n  font-weight: normal;\n`;\nconst StyledAuthor = styled.h1`\n  margin-left: -4px !important;\n  font-size: 40px;\n  line-height: 1.1;\n  margin: 0;\n  word-break: break-word;\n\n  ${mq.gt.xs} {\n    font-size: 80px;\n  }\n`;\nconst StyledTagline = styled.h2`\n  margin-left: -4px !important;\n  font-size: 40px;\n  line-height: 1.1;\n  margin: 0;\n  color: var(--primary-color);\n  word-break: break-word;\n\n  ${mq.gt.xs} {\n    font-size: 80px;\n  }\n`;\nconst StyledDescription = styled.div`\n  margin-top: 0.5rem;\n  width: 100%;\n  max-width: 500px;\n`;\n\nconst Hero = ({ data }) => {\n  const { introduction, author, tagline, description, ctaLink, ctaLabel } = data;\n\n  return (\n    <StyledHeroSection>\n      <StyledIntroduction>{introduction}</StyledIntroduction>\n      <StyledAuthor>{author}</StyledAuthor>\n      <StyledTagline>{tagline}</StyledTagline>\n      <StyledDescription dangerouslySetInnerHTML={{ __html: description }} />\n      <ButtonLink label={ctaLabel} link={ctaLink} />\n      <ScrollIndicator />\n    </StyledHeroSection>\n  );\n};\n\nHero.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Hero;\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport About from '../components/about';\nimport Contact from '../components/contact';\nimport FeaturedProjects from '../components/featured-projects';\nimport Hero from '../components/hero';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { indexMenuLinks } from '../components/_config/menu-links';\n\nconst Index = ({ data }) => {\n  const heroData = {\n    author: data.site.siteMetadata.author,\n    tagline: data.hero.frontmatter.tagline,\n    description: data.hero.html,\n    introduction: data.hero.frontmatter.introduction,\n    ctaLabel: data.hero.frontmatter.cta_label,\n    ctaLink: data.hero.frontmatter.cta_link,\n  };\n\n  return (\n    <Layout menuLinks={indexMenuLinks}>\n      <SEO title=\"Home\" />\n      <Hero data={heroData} />\n      <About data={data.about} />\n      <FeaturedProjects featured={data.featuredProjects.nodes} />\n      <Contact data={data.contact} />\n    </Layout>\n  );\n};\n\nIndex.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Index;\n\nexport const query = graphql`\n  {\n    site {\n      siteMetadata {\n        author\n      }\n    }\n\n    hero: markdownRemark(fileAbsolutePath: { regex: \"/content/sections/hero/\" }) {\n      frontmatter {\n        introduction\n        tagline\n        cta_label\n        cta_link\n      }\n      html\n    }\n\n    about: markdownRemark(fileAbsolutePath: { regex: \"/content/sections/about/\" }) {\n      frontmatter {\n        title\n        techs\n        about_image {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      html\n    }\n\n    cards: markdownRemark(fileAbsolutePath: { regex: \"/content/sections/cards/\" }) {\n      frontmatter {\n        cards {\n          label\n          icon\n          prefix\n          description\n        }\n      }\n      html\n    }\n\n    featuredProjects: allMarkdownRemark(\n      limit: 3\n      sort: { order: DESC, fields: frontmatter___date }\n      filter: { fileAbsolutePath: { regex: \"/content/projects/\" }, frontmatter: { featured: { eq: true } } }\n    ) {\n      nodes {\n        frontmatter {\n          date(formatString: \"D MMMM, YYYY\")\n          title\n          repo_link\n          demo_link\n          techs\n          cover_image {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n        html\n      }\n    }\n\n    contact: markdownRemark(fileAbsolutePath: { regex: \"/content/sections/contact/\" }) {\n      frontmatter {\n        email\n        address\n      }\n      html\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledContentLink = styled.a`\n  text-decoration: none;\n\n  &:hover > * {\n    cursor: pointer;\n    color: var(--primary-color);\n  }\n`;\n"],"sourceRoot":""}